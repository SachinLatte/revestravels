<!DOCTYPE html>
<html >
  <head>
    <meta charset="UTF-8">
	<meta name="viewport" content="width=device-width,user-scalable=no,initial-scale=1,maximum-scale=1,minimum-scale=1">

    <title>%title%</title>
<meta name="description" content="%description%">
<meta name="keywords" content="%keyword%">


    <link rel="stylesheet" href="style.css">
	<link rel="stylesheet" href="css/swiper.min.css">
    <link rel="stylesheet" href="css/font-awesome.css">
    <link href="css/owl.carousel.css" rel="stylesheet">
    <link href="css/owl.theme.css" rel="stylesheet">
    <link href="css/animate.min.css" rel="stylesheet">
    <link href="css/forms.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="css/style-offer.css">
    <link href="css/layout.css" rel="stylesheet" type="text/css" media="all">
	<link href="css/custom.flexslider.css" rel="stylesheet" type="text/css" media="all">


    <!--testimonial slider css-->
    <link rel='stylesheet prefetch' href='css/slick.css'>
	<link rel='stylesheet prefetch' href='css/slick-theme.css'>


  </head>

  <body>

    <header>
        <div class="headercontwrap"><!--start headercontwrap-->
       	<div class="headerContainerWrapper">
        	<div class="headercontrol">
			<div class="headerContainerShadow">
		<div class="headerContainer">
			<div class="padding">
				<div class="wrapper"><!--start wrapper-->
                	<nav id='cssmenu'>
                    <div class="logo">%INSIDE_LINK_0%</div>
                    <div id="head-mobile"></div>
                <div class="button"></div>
                    <ul>
                    <li class='active'>%INSIDE_LINK_1%</li>
                    <li>%INSIDE_LINK_2%</li>
                    <li>%INSIDE_LINK_3%
                    <!-- <li><a href='south-africa-2019.html'>South africa 2019</a> -->
                       <!--<ul>
                          	<li><a href="#">Explore The Corals</a></li>
                            <li><a href="#">Snowy Holidays</a></li>
                            <li><a href="#">Get Set Cruise</a></li>
                            <li><a href="#">Across India</a></li>
                            <li><a href="#">Royal Getaways</a></li>
                            <li><a href="#">Find your soul</a></li>
                            <li><a href="#">Offbeat Vacations</a></li>
                            <li><a href="#">On the wheels</a></li>
                            <li><a href="#">Info The Wild</a></li>
                            <li><a href="#">Intimate Getaways</a></li>
                       </ul>-->
                    </li>
                    <!-- <li><a href='early-bird-offer.html'>early bird offer</a></li> -->
                    <!--<li><a href='testimonials.html'>testimonial</a></li>-->
                    <li>%INSIDE_LINK_4%</li>
                    </ul>
                <div class="clear"></div>
                    <div class="linebot"></div>
				</nav>
                </div><!--end wrapper-->
			</div>
		</div>
	</div>
    		</div>
		</div>
       </div><!--end headercontwrap-->



       <div id="slider" class="clear">

        <div class="swiper-container">
        <div class="swiper-wrapper">
            <div class="swiper-slide">
            	<img src="images/slide2.jpg">
                	<div class="centralise">
                      <div class="verticalwrap">
                        <article>
                          <h2 class="heading uppercase"><span></span></h2>
                        </article>
                      </div>
                    </div>
            </div>
            <div class="swiper-slide">
            	<img src="images/slide3.jpg">
                	<div class="centralise">
                      <div class="verticalwrap">
                        <article>
                          <h2 class="heading uppercase"><span></span></h2>
                        </article>
                      </div>
                    </div>
            </div>
            <div class="swiper-slide">
            	<img src="images/slide5.jpg">
                	<div class="centralise">
                      <div class="verticalwrap">
                        <article>
                          <h2 class="heading uppercase"><span></span></h2>
                        </article>
                      </div>
                    </div>
            </div>

        </div>
        <!-- Add Pagination -->
        <div class="swiper-pagination"></div>
        <!-- Add Arrows -->
        <div class="swiper-button-next"></div>
        <div class="swiper-button-prev"></div>
    </div>


            <div class="flexslider basicslider">
              <ul class="slides">

                <li><img src="images/slide2.jpg" alt="">
                  <div class="txtoverlay">
                    <div class="centralise">
                      <div class="verticalwrap">
                        <article>
                          <h2 class="heading uppercase"><span></span></h2>
                        </article>
                      </div>
                    </div>
                  </div>
                </li>
                <li><img src="images/slide3.jpg" alt="">
                  <div class="txtoverlay">
                    <div class="centralise">
                      <div class="verticalwrap">
                        <article>
                          <h2 class="heading uppercase"><span></span></h2>
                        </article>
                      </div>
                    </div>
                  </div>
                </li>

                <li><img src="images/slide5.jpg" alt="">
                  <div class="txtoverlay">
                    <div class="centralise">
                      <div class="verticalwrap">
                        <article>
                          <h2 class="heading uppercase"><span></span></h2>
                        </article>
                      </div>
                    </div>
                  </div>
                </li>
              </ul>
            </div>
  		</div>
</header>


<div class="mid-wrap"><!--start mid-wrap-->
	<div class="wrapper"><!--start wrapper-->
    	<div class="countries"><!--start countries-->


           <div id="owl-demo" class="owl-carousel">

          <div class="item"><img src="images/greece.png" alt="greece"></div>
          <div class="item"><img src="images/dubai.png" alt="dubai"></div>
          <div class="item"><img src="images/australia.png" alt="australia"></div>
          <div class="item"><img src="images/new-zealand.png" alt="new-zealand"></div>
          <div class="item"><img src="images/india.png" alt="india"></div>
          <!-- <div class="item"><img src="images/south-africa.png" alt="south-africa"></div> -->
          <div class="item"><img src="images/thailand.png" alt="thailand"></div>

          <div class="item"><img src="images/greece.png" alt="greece"></div>
          <div class="item"><img src="images/dubai.png" alt="dubai"></div>
          <div class="item"><img src="images/australia.png" alt="australia"></div>
          <div class="item"><img src="images/maldives.png" alt="maldives"></div>
          <div class="item"><img src="images/new-zealand.png" alt="new-zealand"></div>
          <div class="item"><img src="images/india.png" alt="india"></div>
          <!-- <div class="item"><img src="images/south-africa.png" alt="south-africa"></div> -->
          <div class="item"><img src="images/thailand.png" alt="thailand"></div>

          <div class="item"><img src="images/greece.png" alt="greece"></div>
          <div class="item"><img src="images/dubai.png" alt="dubai"></div>
          <div class="item"><img src="images/australia.png" alt="australia"></div>
          <div class="item"><img src="images/new-zealand.png" alt="new-zealand"></div>
          <div class="item"><img src="images/india.png" alt="india"></div>
          <!-- <div class="item"><img src="images/south-africa.png" alt="south-africa"></div> -->
          <div class="item"><img src="images/thailand.png" alt="thailand"></div>

        </div>



          <div class="clear"></div>
        </div><!--end countries-->

        <div class="abtcontent"><!--start abtcontent-->
        	<article class="abtcontentlt wow fadeInLeft" data-wow-duration="1000ms" data-wow-delay="300ms"><!--start abtcontentlt-->
            	<figure><img src="images/abtpic.png" alt="aboutpic"></figure>
            </article><!--end abtcontentlt-->

            <aside class="abtcontentrt wow fadeInRight"><!--start abtcontentlt-->
            	<h1><span></span></h1>
                <p>%text%</p>
            </aside><!--end abtcontentlt-->
            <div class="clear"></div>
        </div><!--end abtcontent-->


        <div class="adventures nobtsp"><!--start adventures-->
        	<h2><span></span></h2>

            <div class="adventuresin nodisplay"><!--start adventuresin-->

            	<article class="adventurelt"><!--start adventurelt-->

                    <div class="itemwrap">

                      <article class="border c-two" style="background-image:url(images/intimate-gateways.png)">
                        <div style="opacity: 0;" class="fdw-background">
                            <h4>%INSIDE_LINK_5%</h4>
                            <div class="fdw-subtitle a-center"></div>

                        </div>
                    </article>
                    </div>


                    <div class="itemwrap">

                      <article class="border c-two" style="background-image:url(images/info-wild.png)">
                        <div style="opacity: 0;" class="fdw-background">
                            <h4>%INSIDE_LINK_6%</h4>
                            <div class="fdw-subtitle a-center"></div>

                        </div>
                    </article>
                    </div>



                    <div class="itemwrap">

                      <article class="border c-two" style="background-image:url(images/explore-corals.png)">
                        <div style="opacity: 0;" class="fdw-background">
                            <h4>%INSIDE_LINK_7%</h4>
                            <div class="fdw-subtitle a-center"></div>

                        </div>
                    </article>
                    </div>



                    <div class="itemwrap">

                      <article class="border c-two" style="background-image:url(images/find-soul.png)">
                        <div style="opacity: 0;" class="fdw-background">
                            <h4>%INSIDE_LINK_8%</h4>
                            <div class="fdw-subtitle a-center"></div>

                        </div>
                    </article>
                    </div>




                    <div class="itemwrap">

                      <article class="border c-two" style="background-image:url(images/snow-holidays.png)">
                        <div style="opacity: 0;" class="fdw-background">
                            <h4>%INSIDE_LINK_9%</h4>
                            <div class="fdw-subtitle a-center"></div>

                        </div>
                    </article>
                    </div>




                   <div class="itemwrap">

                      <article class="border c-two" style="background-image:url(images/get-set.png)">
                        <div style="opacity: 0;" class="fdw-background">
                            <h4>%INSIDE_LINK_10%</h4>
                            <div class="fdw-subtitle a-center"></div>

                        </div>
                    </article>
                    </div>




                    <div class="itemwrap">

                      <article class="border c-two" style="background-image:url(images/across-india.png)">
                        <div style="opacity: 0;" class="fdw-background">
                            <h4>%INSIDE_LINK_11%</h4>
                            <div class="fdw-subtitle a-center"></div>

                        </div>
                    </article>
                    </div>



                    <div class="itemwrap">

                      <article class="border c-two" style="background-image:url(images/royal-getaways.png)">
                        <div style="opacity: 0;" class="fdw-background">
                            <h4>%INSIDE_LINK_12%</h4>
                            <div class="fdw-subtitle a-center"></div>

                        </div>
                    </article>
                    </div>



                    <div class="clear"></div>

                </article><!--end adventurelt-->

                <article class="adventurert"><!--start adventurert-->




                    <div class="itemwrap2">

                      <article class="border c-three" style="background-image:url(images/on-wheels.png)">
                        <div style="opacity: 0;" class="fdw-background2">
                            <h4>%INSIDE_LINK_13%</h4>
                            <div class="fdw-subtitle2 a-center"></div>

                        </div>
                    </article>
                    </div>



                    <div class="itemwrap2">

                      <article class="border c-three" style="background-image:url(images/offbeat-vacations.png)">
                        <div style="opacity: 0;" class="fdw-background2">
                            <h4>%INSIDE_LINK_14%</h4>
                            <div class="fdw-subtitle2 a-center"></div>

                        </div>
                    </article>
                    </div>


                </article><!--end adventurert-->

                <div class="clear"></div>
            </div><!--end adventuresin-->

        </div><!--end adventures-->

    </div><!--end wrapper-->
</div><!--end mid-wrap-->


<div class="needbrowse"><!--start needbrowse-->
	<div class="box first">
    <div class="boxin">
        <div class="top-left">
          <h2 class="title"></h2>
          <p class="intro"></p>
         </div>
    </div>
  </div>
<div class="box second">
    <div class="top-left">
    	<div class="boxin">
      	<h2 class="title"></h2>
      	<p class="intro"></p>
        </div>
    </div>
  </div>
<div class="box third">
    <div class="top-left">
    <div class="boxin">
      <h2 class="title"></h2>
      <p class="intro"></p>
    </div>
    </div>
  </div>
<div class="box fourth">
    <div class="top-left">
    <div class="boxin">
      <h2 class="title"></h2>
      <p class="intro"></p>
    </div>
    </div>
  </div>
  <div class="box fifth">
    <div class="top-left">
    <div class="boxin">
      <h2 class="title"></h2>
      <p class="intro"></p>
    </div>
    </div>
  </div>
  <div class="box sixth">
    <div class="top-left">
    <div class="boxin">
      <h2 class="title"></h2>
      <p class="intro"></p>
    </div>
    </div>
  </div>
  <div class="box seventh">
    <div class="top-left">
    <div class="boxin">
      <h2 class="title"></h2>
      <p class="intro"></p>
    </div>
    </div>
  </div>
  <div class="box eighth">
    <div class="top-left">
    <div class="boxin">
      <h2 class="title"></h2>
      <p class="intro"></p>
    </div>
    </div>
  </div>
  <div class="box ninth">
    <div class="top-left">
    <div class="boxin">
      <h2 class="title"></h2>
      <p class="intro"></p>
    </div>
    </div>
  </div>
  <div class="box tenth">
    <div class="top-left">
    <div class="boxin">
      <h2 class="title"></h2>
      <p class="intro"></p>
    </div>
    </div>
  </div>
</div><!--end needbrowse-->


<div class="browse"><!--start browse-->
	<div class="browselt"><!--start browselt-->
    	<div class="browlt wow fadeInDown"><!--start browlt-->
        	<figure>
                <img src="images/intimate-gateways.png" alt="intimate-gateways">
                <figcaption>
                    <h3></h3>
                    <p></p>
              </figcaption>
            </figure>

        </div><!--end browlt-->


        <div class="browlt wow fadeInUp"><!--start browlt-->
        	<figure>
                <img src="images/info-wild.png" alt="info-wild">
                <figcaption>
                    <h3></h3>
                    <p></p>
              </figcaption>
            </figure>

        </div><!--end browlt-->


        <div class="browlt wow fadeInDown"><!--start browlt-->
        	<figure>
                <img src="images/explore-corals.png" alt="explore-corals">
                <figcaption>
                    <h3></h3>
                    <p></p>
              </figcaption>
            </figure>

        </div><!--end browlt-->


        <div class="browlt wow fadeInUp"><!--start browlt-->
        	<figure>
                <img src="images/find-soul.png" alt="find-soul">
                <figcaption>
                    <h3></h3>
                    <p></p>
              </figcaption>
            </figure>

        </div><!--end browlt-->


        <div class="browlt wow fadeInDown"><!--start browlt-->
        	<figure>
                <img src="images/snow-holidays.png" alt="snowy-holidays">
                <figcaption>
                    <h3></h3>
                    <p></p>
              </figcaption>
            </figure>
        </div><!--end browlt-->



        <div class="browlt wow fadeInUp"><!--start browlt-->
        	<figure>
                <img src="images/get-set.png" alt="snowy-holidays">
                <figcaption>
                    <h3></h3>
                    <p></p>
              </figcaption>
            </figure>

        </div><!--end browlt-->


        <div class="browlt wow fadeInDown"><!--start browlt-->
        	<figure>
                <img src="images/across-india.png" alt="across-india">
                <figcaption>
                    <h3></h3>
                    <p></p>
              </figcaption>
            </figure>

        </div><!--end browlt-->


        <div class="browlt wow fadeInUp"><!--start browlt-->
        	<figure>
                <img src="images/royal-getaways.png" alt="royal-gateways">
                <figcaption>
                    <h3></h3>
                    <p></p>
              </figcaption>
            </figure>

        </div><!--end browlt-->


        <div class="clear"></div>

    </div><!--end browselt-->

    <div class="browsert"><!--start browsert-->
    	<div class="browrt wow fadeInRight"><!--start browrt-->
        	<figure>
                <img src="images/on-wheels.png" alt="on-wheels">
                <figcaption>
                    <h3></h3>
                    <p></p>
              </figcaption>
            </figure>

        </div><!--end browrt-->



        <div class="browrt wow fadeInRight"><!--start browrt-->
        	<figure>
                <img src="images/offbeat-vacations.png" alt="offbeat-vacations">
                <figcaption>
                    <h3></h3>
                    <p></p>
              </figcaption>
            </figure>

        </div><!--end browrt-->

    </div><!--end browsert-->

    <div class="clear"></div>
</div><!--end browse-->

<!-- <div class="earlybird-offer">
  <div class="offer-heading">
    <div class="width-container">
      <span>EARLYBIRD</span>
      <h4>OFFER</h4>
      <a href="early-bird-offer.html">Know More</a>
    </div>
  </div>
</div> -->

<div class="registration"><!--start registration-->
	<div class="wrapper"><!--start wrapper-->
    	<div class="registrationin"><!--start registrationin-->
        	<!-- <p>Registration Fee: Rs. 10,000/-&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Offer valid for first 100 members only</p> -->

        </div><!--end registrationin-->

        <div class="testimonial"><!--start testimonial-->
        	<h2 class="wow fadeInDown"></h2>

            <section class="quotes">
              <div class="bubble">
                <blockquote><p></p>

                <p></p>
             </blockquote>
                <div></div>
                <cite><strong></strong></cite> </div>
              <div class="bubble">
                <blockquote><p></p>
                <p></p>
                <p></p>
            </blockquote>
                <div></div>
                <cite><strong></strong></cite> </div>


            </section>


        </div><!--end testimonial-->


        <div class="testimonial nobtspac2"><!--start testimonial-->
        	<h2></h2>
            <form name="homeForm" id="homeForm" method="post" action="" >
            <div class="testformlt wow fadeInLeft">
            	<div><input type="text" class="inputs txt" placeholder="Name"  name="Name" id="Name" maxlength="30">
						<label class="errorMsg errName" style="bottom: 50px;"></label></div>

				<div><input type="text" class="inputs txt nobtspac" placeholder="Email Id" name="EmailId" id="EmailId" maxlength="150">
                        <label class="errorMsg errEmailId" style="bottom: 0px;"></label><label class="errorMsg errInvEmail" style="bottom: 0px;"></label></div>
            </div>

            <div class="testformrt wow fadeInRight">
            	<textarea required name="Message"  id="Message" class="inputs comment" placeholder="Message" cols="20" rows="7"></textarea>
				<label class="errorMsg1 errMessage" style="bottom:0px;"></label>
				<div class="formMsg" style="padding: 0px 0px 10px 5px;"></div>
            </div>

            <div class="testformrt wow fadeInRight">
				<input type="hidden" id="type" name="type" value="homeForm">
				<input type="button" class="submitbtn submitbtnHome wow fadeInUp" id="homeSub" value="submit" onclick="saveHomeForm();">
			</div>
            </form>
            <div class="clear"></div>

        </div><!--end testimonial-->

    </div><!--end wrapper-->

</div><!--end registration-->


<footer style="background:url(images/bg_footer.png) center top no-repeat; background-size:cover;">
<div class="footershape" style="background:url(images/footershape.png) center top no-repeat; background-size:100% 100%;"></div>


	<div class="footertop"><!--start footertop-->
	<div class="wrapper"><!--start wrapper-->
    	<div class="fooeterin"><!--start fooeterin-->
        	<div class="footlt wow fadeInUp"><!--start footlt-->
            <h2></h2>
        	<ul>
            	<li>%INSIDE_LINK_15%</li>
                <li>%INSIDE_LINK_16%</li>
                <li>%INSIDE_LINK_17%</li>
                <li>%INSIDE_LINK_18%</li>
                <li>%INSIDE_LINK_19%</li>
                <li>%INSIDE_LINK_20%</li>
                <li>%INSIDE_LINK_21%</li>
            </ul>
            </div><!--end footlt-->


            <div class="footlt wow fadeInDown"><!--start footlt-->
            <h2></h2>
        	<ul>
            	<li>%INSIDE_LINK_22%</li>
                <li>%INSIDE_LINK_23%</li>
                <li>%INSIDE_LINK_24%</li>
                <li>%INSIDE_LINK_25%</li>
                <li>%INSIDE_LINK_26%</li>
                <li>%INSIDE_LINK_27%</li>
                <li>%INSIDE_LINK_28%</li>
                <li>%INSIDE_LINK_29%</li>
                <li>%INSIDE_LINK_30%</li>
                <li>%INSIDE_LINK_31%</li>
            </ul>
            </div><!--end footlt-->



            <div class="footlt lasts wow fadeInDown"><!--start footlt-->
            <h2></h2>
        	<ul>
            	<!-- <li><a href="early-bird-offer.html">Early Bird Offer</a></li> -->
                <li>%INSIDE_LINK_32%</li>
            </ul>
            </div><!--end footlt-->

            <div class="socialicons wow fadeInDown"><!--start socialicons-->
            	<h2></h2>
                <ul>
                	<li>%INSIDE_LINK_33%</li>
                    <li>%INSIDE_LINK_34%</li>
                    <li>%INSIDE_LINK_35%</li>
                </ul>
                <div class="clear"></div>
            </div><!--end socialicons-->

            <div class="clear"></div>

        </div><!--end fooeterin-->
    </div><!--end wrapper-->
    </div><!--end footertop-->


    <div class="footerbottom"><!--start footerbottom-->
    	<div class="wrapper"><!--start wrapper-->
        	<div class="footerbottomin"><!--start footerbottomin-->
            	<ul>
                	<li></li>
                    <li>%INSIDE_LINK_36%</li>
                </ul>
                <div class="clear"></div>
            </div><!--end footerbottomin-->
        </div><!--end wrapper-->
    </div><!--end footerbottom-->
</footer>

<script src="js/jquery-1.11.0.min.js"></script>
    <script type="text/javascript">
		window.onload = function(){
			document.getElementById("submit").onclick = function(){
				saveHomeForm();
			}
		}

		function saveHomeForm(){
			var name = $("#Name").val();
			var email = $("#EmailId").val();
			var msg = $("#Message").val();

			if(name!="" && email != "" && msg != ""){
				$(".errorMsg").css("display","none");
				$(".errorMsg1").css("display","none");

				var eml = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
				if (eml.test(email) == false){
					$(".errInvEmail").css("display","block");
					//alert("Please enter valid email address.");
					return false;
				}

				$.ajax({
					type:'POST',
					data:$("#homeForm").serialize(),
					url :'js/send.php',
					dataType:'json',
					success:function(data){
						if(data.response=='0'){
							$(".formMsg").html("");
							(".formMsg").html("<label style='color:#f94509;;'>Something went wrong!!.</label>");
						}
						if(data.response=='1'){
							$(".formMsg").html("");
							$(".formMsg").html("<label style='color:#7df57d;'>Thanks, we will consider your feedback.</label>");
						}
					}
				});
			}else{
				if(name ==""){$(".errName").css("display","block");}else{$(".errName").css("display","none");}
				if(email == ""){$(".errEmailId").css("display","block");}else{$(".errEmailId").css("display","none");}
				if(msg == ""){$(".errMessage").css("display","block");}else{$(".errMessage").css("display","none");}
			}
		}
</script>


  <script src='http://cdn.jsdelivr.net/jquery.slick/1.5.0/slick.min.js'></script>
  <script src="js/testimonial.js"></script>

  <script src="js/index.js"></script>

  <script src="js/owl.carousel.js"></script>
  <script src="js/swiper.min.js"></script>



    <!-- Initialize Swiper -->
  <script type="text/javascript">
    //var swiper = new Swiper('.swiper-container', {
        //pagination: '.swiper-pagination',
        //nextButton: '.swiper-button-next',
        //prevButton: '.swiper-button-prev',
        //paginationClickable: true,
        //spaceBetween: 30,
        //centeredSlides: true,
        //autoplay: 8000,
		//effect: 'fade',
        //autoplayDisableOnInteraction: false;


		var swiper = new Swiper('.swiper-container', {
        pagination: '.swiper-pagination',
        nextButton: '.swiper-button-next',
        prevButton: '.swiper-button-prev',
        paginationClickable: true,
        spaceBetween: 0,
        centeredSlides: true,
        autoplay: 8000,
		autoplayDisableOnInteraction: false


    });
    </script>


    <script>
    $(document).ready(function() {

      var owl = $("#owl-demo");

      owl.owlCarousel({

        // Define custom and unlimited items depending from the width
        // If this option is set, itemsDeskop, itemsDesktopSmall, itemsTablet, itemsMobile etc. are disabled
        // For better preview, order the arrays by screen size, but it's not mandatory
        // Don't forget to include the lowest available screen size, otherwise it will take the default one for screens lower than lowest available.
        // In the example there is dimension with 0 with which cover screens between 0 and 450px

        itemsCustom : [
          [0, 1],
          [450, 3],
          [600, 4],
          [700, 5],
          [1000, 7],
          [1200, 7],
          [1400, 7],
          [1600, 7]
        ],
        navigation : true

      });


    });
    </script>



    <!--animated header script-->
    <script type="text/javascript">
	// get header height (without border)
	var getHeaderHeight = $('.headerContainerWrapper').outerHeight();

	// border height value (make sure to be the same as in your css)
	var borderAmount = 0;

	// shadow radius number (make sure to be the same as in your css)
	var shadowAmount = 30;

	// init variable for last scroll position
	var lastScrollPosition = 0;

	// set negative top position to create the animated header effect
	$('.headerContainerWrapper').css('top', '-' + (getHeaderHeight + shadowAmount + borderAmount) + 'px');

	$(window).scroll(function() {
		var currentScrollPosition = $(window).scrollTop();

		if ($(window).scrollTop() > 2 * (getHeaderHeight + shadowAmount + borderAmount) ) {

			$('body').addClass('scrollActive').css('padding-top', getHeaderHeight);
			$('.headerContainerWrapper').css('top', 0);

			if (currentScrollPosition < lastScrollPosition) {
				$('.headerContainerWrapper').css('top', '-' + (getHeaderHeight + shadowAmount + borderAmount) + 'px');
			}
			lastScrollPosition = currentScrollPosition;



		} else {
			$('body').removeClass('scrollActive').css('padding-top', 0);
		}
	});
</script>

<script src="js/wow.js"></script>
<script src="js/main.js"></script>

<script src="js/jquery.flexslider-min.js"></script>
<script src="js/custom.js"></script>


<!--start enter input js code-->
<script type="text/javascript">
	 $('.inputs').keydown(function (e) {
         if (e.which === 13) {
             var index = $('.inputs').index(this) + 1;
             $('.inputs').eq(index).focus();
         }
     });
</script>
<!--end enter input js code-->

</body>
</html>
